name: Terraform Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      account_nbr:
        description: 'Account to dpeloy to'
        type: string

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    
    env:
      TF_VAR_environment: ${{ github.event.inputs.environment || 'dev' }}
    
    defaults:
      run:
        shell: bash
        working-directory: ./BC-01 
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Get AWS Account Number
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "AWS Account Number: $ACCOUNT_ID"
          echo "ACCOUNT_ID=$ACCOUNT_ID" >> $GITHUB_ENV

      - name: Deploy CloudFormation Stack
        run: |
          aws cloudformation deploy \
            --stack-name terraform-backend \
            --template-file cfn/s3-dynamodb.yml \
            --capabilities CAPABILITY_NAMED_IAM

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      
      - name: Terraform Init
        id: init
        run: |
          terraform init \
            -backend-config="bucket=terraform-state-${{ github.event.inputs.account_nbr || env.ACCOUNT_ID }}-us-east-1" \
            -backend-config="key=terraform-${{ github.event.inputs.environment || 'dev' }}.tfstate" \
            -backend-config="region=us-east-1" \
            -backend-config="dynamodb_table=terraform-state-lock" \
            -backend-config="encrypt=true"
      - name: Terraform Validate
        id: validate
        run: terraform validate
      
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan \
            -var-file="environments/${{ github.event.inputs.environment || 'dev' }}.tfvars" \
            -out=tfplan
      
      - name: Terraform Apply
        if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        id: apply
        run: terraform apply -auto-approve tfplan